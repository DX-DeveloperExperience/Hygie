(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{203:function(e,t,o){e.exports=o.p+"assets/img/github_secret.51d5d7a3.png"},204:function(e,t,o){e.exports=o.p+"assets/img/gitlab_secret.4d64f63d.png"},250:function(e,t,o){"use strict";o.r(t);var a=o(1),s=Object(a.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"self-hosted-configurations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#self-hosted-configurations","aria-hidden":"true"}},[e._v("#")]),e._v(" Self-hosted Configurations")]),e._v(" "),a("p",[e._v("If you're using your own server to host our solution, there's a few things you need to setup.")]),e._v(" "),a("h2",{attrs:{id:"environment-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" Environment Variables")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("DEFAULT_CONFIGURATION_FILE")]),e._v(": url "),a("strong",[e._v("[REQUIRED]")])]),e._v(" "),a("p",[e._v("The URL of the default "),a("code",[e._v(".rulesrc")]),e._v(" file")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("ENCRYPTION_KEY")]),e._v(": secret passphrase "),a("strong",[e._v("[REQUIRED]")])]),e._v(" "),a("p",[e._v("Used to encrypt user's tokens")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("APPLICATION_NAME")]),e._v(": the name of the App "),a("strong",[e._v("[REQUIRED]")])]),e._v(" "),a("p",[e._v("Will appear on the commit status.")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("APPLICATION_URL")]),e._v(": the default URL of your application "),a("strong",[e._v("[REQUIRED]")])]),e._v(" "),a("p",[e._v("Used in the registration process")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("DISABLE_REMOTE_CONFIG")]),e._v(": true|false "),a("em",[e._v("[optional]")])]),e._v(" "),a("p",[e._v("Specify if you allow to fetch the "),a("code",[e._v(".git-wehbooks/.rulesrc")]),e._v(" file from the received hook. Otherwise, it uses the local "),a("code",[e._v("src/rules/.rulesrc")]),e._v(".")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("DATA_ACCESS")]),e._v(': "file" | undefined '),a("em",[e._v("[optional]")])]),e._v(" "),a("p",[e._v('Specify the way you\'re accessing your data. By default, the app is fetching your mongo database.\nIf you choose "file", it will store(and fetch) all users configurations into files.')])]),e._v(" "),a("li",[a("p",[a("code",[e._v("MONGODB_CONNECTION_STRING")]),e._v(" "),a("em",[e._v("[optional]")])]),e._v(" "),a("p",[a("code",[e._v("mongodb://localhost/hygie")]),e._v(" by default")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("NODE_ENV")]),e._v(': "production" | undefined '),a("em",[e._v("[optional]")])]),e._v(" "),a("p",[e._v("Used by the LoggerService to add Timestamp and color in log (not set in production mode)")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("VERBOSE_LOGGER")]),e._v(': "true" | undefined '),a("em",[e._v("[optional]")])]),e._v(" "),a("p",[e._v("Enable verbose mode in the LoggerService.")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("ANALYTICS_ID")]),e._v(": Google Analytics ID "),a("em",[e._v("[optional]")])]),e._v(" "),a("p",[e._v("Used to send Rule and Post-Actions events to Google Analytics")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("WEBHOOK_SECRET")]),e._v(": string "),a("em",[e._v("[optional]")])]),e._v(" "),a("p",[e._v("You can enable whitelisting by setting the "),a("code",[e._v("WEBHOOK_SECRET")]),e._v(" env var. Every user who wants to use your app need to provide the secret in its Git's Webhook configuration.")]),e._v(" "),a("p",[a("em",[e._v("Github Webhook")])]),e._v(" "),a("p",[a("img",{attrs:{src:o(203),alt:"Github Secret"}})]),e._v(" "),a("p",[a("em",[e._v("Gitlab Webhook")])]),e._v(" "),a("p",[a("img",{attrs:{src:o(204),alt:"Gitlab Secret"}})])])]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[e._v("Setting Environment Variables:")]),e._v(" "),a("ul",[a("li",[e._v("Windows: "),a("code",[e._v('$env:DATA_ACCESS="file"')])]),e._v(" "),a("li",[e._v("Linux: "),a("code",[e._v("export DATA_ACCESS=file")])])])]),e._v(" "),a("h2",{attrs:{id:"google-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-api","aria-hidden":"true"}},[e._v("#")]),e._v(" Google API")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("SendEmailRunnable")]),e._v(" makes use of Google API to send mails.")]),e._v(" "),a("p",[e._v("If you want to use the Runnable, you need to create the "),a("code",[e._v("crendentials.json")]),e._v(" (located in the top level of your application) file as described "),a("a",{attrs:{href:"https://developers.google.com/gmail/api/quickstart/nodejs",target:"_blank",rel:"noopener noreferrer"}},[e._v("in the offical documentation"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("You just have to follow "),a("code",[e._v("Step 1")]),e._v(" to get your credentials.")]),e._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[e._v("The chosen account will be the sender (email "),a("code",[e._v("from")]),e._v(" field) of all emails sended through the "),a("code",[e._v("SendEmailRunnable")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"monitoring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#monitoring","aria-hidden":"true"}},[e._v("#")]),e._v(" Monitoring")]),e._v(" "),a("h3",{attrs:{id:"google-analytics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-analytics","aria-hidden":"true"}},[e._v("#")]),e._v(" Google Analytics")]),e._v(" "),a("p",[e._v("As specified in the previous section, you can set the "),a("code",[e._v("ANALYTICS_ID")]),e._v(" env var to enable "),a("em",[e._v("Hygie")]),e._v(" to send events.")]),e._v(" "),a("p",[e._v("For the moment, the app only send informations about the use of "),a("code",[e._v("Rule")]),e._v(" and "),a("code",[e._v("Runnable")]),e._v(".\nEverytime one of them is processed, an event is sent to Google Analytics, with the project emitter and the name of the "),a("code",[e._v("Rule")]),e._v(" or "),a("code",[e._v("Runnable")]),e._v(".")]),e._v(" "),a("p",[e._v("This allows you to have an idea of their uses.")]),e._v(" "),a("h3",{attrs:{id:"prometheus-grafana"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prometheus-grafana","aria-hidden":"true"}},[e._v("#")]),e._v(" Prometheus / Grafana")]),e._v(" "),a("p",[e._v("To monitor the system's health, we've created a "),a("code",[e._v("/metrics")]),e._v(" endpoint.")]),e._v(" "),a("p",[e._v("This endpoint is fetched by "),a("a",{attrs:{href:"https://prometheus.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prometheus"),a("OutboundLink")],1),e._v(" every 15 seconds, and provide informations about the system itself (CPU, RAM, etc), the number of requests and the time needed to process them.")]),e._v(" "),a("p",[e._v("We use "),a("a",{attrs:{href:"https://grafana.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Grafana"),a("OutboundLink")],1),e._v(" to create dashboard over Prometheus and visualize all usefull informations.")]),e._v(" "),a("p",[e._v("You can directly import our schema to visualize "),a("em",[e._v("Hygie")]),e._v("'s health informations "),a("a",{attrs:{href:"../dashboard.json"}},[e._v("here")]),e._v(".")])])},[],!1,null,null,null);t.default=s.exports}}]);