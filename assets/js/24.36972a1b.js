(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{258:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"customisable-rules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#customisable-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Customisable Rules")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v(".hygie/.rulesrc")]),t._v(" file contains all the rules you've configured.\nCheck our example "),s("code",[t._v(".rulesrc")]),t._v(" file "),s("router-link",{attrs:{to:"/rules/rulesExample.html"}},[t._v("here")]),t._v(".")],1),t._v(" "),s("p",[t._v("You can use our existing rules or adding yours. Rules are very simple to add.\nWhen you create your own rule, it must extends the "),s("code",[t._v("Rule")]),t._v(" class ("),s("code",[t._v("src/rules/rule.class.ts")]),t._v(").")]),t._v(" "),s("h2",{attrs:{id:"rule-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule-configuration","aria-hidden":"true"}},[t._v("#")]),t._v(" Rule configuration")]),t._v(" "),s("h3",{attrs:{id:"structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#structure","aria-hidden":"true"}},[t._v("#")]),t._v(" Structure")]),t._v(" "),s("p",[t._v("Each rule must respect the following structure:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" commitMessage\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("events")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MyEvent1\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MyEventX\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("opt1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" val1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("optY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" valY\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("onSuccess")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyRunnable\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runnableArg1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" runnableVal1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runnableArgZ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" runnableValZ\n")])])]),s("h3",{attrs:{id:"properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),s("p",[t._v("The following properties are all needed :")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("enabled")]),t._v(": this boolean specify if the current rule will be used "),s("em",[t._v("[optional: default "),s("code",[t._v("true")]),t._v("]")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("events")]),t._v(": this array contains all events on which the rule will be tested. See the "),s("router-link",{attrs:{to:"/others/events.html"}},[t._v("supported events")]),t._v(". "),s("em",[t._v("[optional: default define in each rule]")]),s("div",{staticClass:"warning custom-block"},[s("p",[t._v("If you provide a value, it will overwrite defaults values, not append it.")])])],1),t._v(" "),s("li",[s("code",[t._v("options")]),t._v(": this object regroup all metadata you need to fill your needs. You can add any attribute you want (string, boolean, array, object...), it will be accessible in the "),s("code",[t._v("validate()")]),t._v(" method.")]),t._v(" "),s("li",[s("code",[t._v("onSuccess")]),t._v("("),s("code",[t._v("onError")]),t._v(", "),s("code",[t._v("onBoth")]),t._v("): this object is an array of "),s("strong",[t._v("post-actions")]),t._v(" (or callback functions) which will be called if the rule success (fails or both). The "),s("code",[t._v("callback")]),t._v(" must be a "),s("router-link",{attrs:{to:"/post-actions/"}},[t._v("Runnable class")]),t._v(". It takes an "),s("code",[t._v("args")]),t._v(" object as arguments. As the "),s("code",[t._v("options")]),t._v(", you can create as many argument as you want.")],1)]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",[t._v("These "),s("code",[t._v("callback")]),t._v("s are called sequentially and do not return value ("),s("code",[t._v("void")]),t._v(" type).")])]),t._v(" "),s("h3",{attrs:{id:"templating-with-handlebars"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#templating-with-handlebars","aria-hidden":"true"}},[t._v("#")]),t._v(" Templating with "),s("em",[t._v("handlebars")])]),t._v(" "),s("p",[t._v("Post-actions "),s("code",[t._v("args")]),t._v(" support templating: "),s("strong",[s("em",[t._v("Hygie")])]),t._v(" use "),s("a",{attrs:{href:"https://handlebarsjs.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("handlebars js"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Consequently, you can inject data processed by the "),s("code",[t._v("validate()")]),t._v(" method of the current rule ("),s("code",[t._v("name")]),t._v(" attribute). You can see the "),s("a",{attrs:{href:"#validate-method"}},[s("code",[t._v("validate()")]),t._v(" method section")]),t._v(" for more informations.")]),t._v(" "),s("p",[t._v("For example, you can iterate over the "),s("code",[t._v("data.commits")]),t._v(" array of "),s("code",[t._v("CommitMessageRule")]),t._v(", and display the commit's "),s("code",[t._v("sha")]),t._v(" and the differents groups captured by the "),s("code",[t._v("regexp")]),t._v(" options.")]),t._v(" "),s("p",[t._v("You can also access the environment variables you've configured via the "),s("code",[t._v("env")]),t._v(" prefix. More informations in the "),s("router-link",{attrs:{to:"/rules/guide/useEnvVar.html"}},[t._v("Enviroment Variable section")]),t._v(".")],1),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("onSuccess")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" WebhookRunnable\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//discordapp.com/api/webhooks/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("env.DISCORD_ISSUE_WEBHOOK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("env.DISCORD_ISSUE_TOKEN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" '"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"embeds"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#foreach data.commits}}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"title"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Commit #{{sha}} = Object: {{matches.[1]}} | Scope: {{matches.[2]}} | Issue: {{matches.[3]}}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"color"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1127128")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("/foreach"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("The "),s("code",[t._v("foreach")]),t._v(" keyword has been add to solve the trailing-comma's problem. When you use it, it will add a comma at the end of the pattern, except for the last one element of the array.")])]),t._v(" "),s("h2",{attrs:{id:"create-your-own-rule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-your-own-rule","aria-hidden":"true"}},[t._v("#")]),t._v(" Create your own rule")]),t._v(" "),s("p",[t._v("If you want to create a new type of rule, you can create your own class. This class must extend the abstract "),s("code",[t._v("Rule")]),t._v(" class, and implement the "),s("code",[t._v("validate()")]),t._v(" method. This method contains all your business logic.")]),t._v(" "),s("h3",{attrs:{id:"cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli","aria-hidden":"true"}},[t._v("#")]),t._v(" CLI")]),t._v(" "),s("p",[t._v("The easiest way to create it is to use our CLI: "),s("a",{attrs:{href:"https://github.com/DX-DeveloperExperience/hygie-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("hygie-cli"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Simply run : "),s("code",[t._v("npm run generate:rule RULENAME")]),t._v(".")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",[t._v("You need to have "),s("a",{attrs:{href:"https://github.com/nestjs/nest-cli",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("@nestjs/cli")]),s("OutboundLink")],1),t._v(" install globally. Therefore, run "),s("code",[t._v("npm install -g @nestjs/cli")]),t._v(".")])]),t._v(" "),s("p",[t._v("This CLI will create your rule file and add everything necessary in the project. You just have to focus on your business logic.")]),t._v(" "),s("h3",{attrs:{id:"validate-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#validate-method","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("validate()")]),t._v(" method")]),t._v(" "),s("p",[t._v("Each Rule, have a "),s("code",[t._v("validate()")]),t._v(" method as follows:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RuleDecorator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myCustom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyCustomRule")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rule")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    webhook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Webhook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ruleConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyCustomRule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ruleResults"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RuleResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RuleResult"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ruleResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RuleResult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      webhook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGitApiInfos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      webhook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCloneURL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("googleAnalytics\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rule'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myCustom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" webhook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCloneURL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BUSINESS LOGIC")]),t._v("\n\n    ruleResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ruleResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      myData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is some data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      myArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'val1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'val2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'val3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ruleResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This method return a "),s("code",[t._v("RuleResult")]),t._v(" object, containing the "),s("code",[t._v("validated")]),t._v(" boolean attribute and a "),s("code",[t._v("data")]),t._v(" object. You can custom this last property, and then, use it in your "),s("code",[t._v("callback")]),t._v("s.")])])},[],!1,null,null,null);a.default=n.exports}}]);