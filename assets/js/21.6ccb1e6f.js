(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{254:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"customisable-post-actions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#customisable-post-actions","aria-hidden":"true"}},[t._v("#")]),t._v(" Customisable Post-Actions")]),t._v(" "),a("p",[t._v("A Post-Action, is a callback that will be executed after a rule "),a("code",[t._v("validate()")]),t._v(" method.\nThis allow you to customise your process, according to the result of a rule.")]),t._v(" "),a("p",[t._v("You can:")]),t._v(" "),a("ul",[a("li",[t._v("log informations,")]),t._v(" "),a("li",[t._v("send webhook with data priviously processed,")]),t._v(" "),a("li",[t._v("comment an issue or a PR,")]),t._v(" "),a("li",[t._v("and much more!")])]),t._v(" "),a("h2",{attrs:{id:"how-does-it-work"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-does-it-work","aria-hidden":"true"}},[t._v("#")]),t._v(" How does it work?")]),t._v(" "),a("p",[t._v("In your "),a("code",[t._v(".rulesrc")]),t._v(" config file, you can add "),a("code",[t._v("callback")]),t._v(" functions that will be called if the rule succeeds or not.")]),t._v(" "),a("p",[t._v("These "),a("code",[t._v("callback")]),t._v("s are "),a("code",[t._v("Runnable")]),t._v(" classes, that implementing the "),a("code",[t._v("Runnable")]),t._v(" abstract class.\nThe "),a("code",[t._v("Runnable")]),t._v(" class will have a "),a("code",[t._v("run()")]),t._v(" method with "),a("code",[t._v("callbackType")]),t._v(", "),a("code",[t._v("RuleResult")]),t._v(" and "),a("code",[t._v("args")]),t._v(" as arguments.")]),t._v(" "),a("p",[a("code",[t._v("callbackType")]),t._v(" precise if the Runnable is called because the rule failed, succeed or if it always called.\n"),a("router-link",{attrs:{to:"/rules/customisableRules.html#validate-method"}},[a("code",[t._v("RuleResult")])]),t._v(" is an object containing the result of the rule, and "),a("code",[t._v("args")]),t._v(" is a custom object, with as many properties as you want.")],1),t._v(" "),a("h2",{attrs:{id:"create-your-own-runnable-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-your-own-runnable-class","aria-hidden":"true"}},[t._v("#")]),t._v(" Create your own Runnable class")]),t._v(" "),a("p",[t._v("If you don't find a suitable Post-Action for your needs, you can easily create yours by extending the "),a("code",[t._v("Runnable")]),t._v(" class.")]),t._v(" "),a("p",[t._v("Your Runnable class must have a name and implement the "),a("code",[t._v("run()")]),t._v(" method as said in the previous section.")]),t._v(" "),a("h3",{attrs:{id:"cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli","aria-hidden":"true"}},[t._v("#")]),t._v(" CLI")]),t._v(" "),a("p",[t._v("Same as Rules creation, the easiest way to create it is to use our CLI: "),a("a",{attrs:{href:"https://github.com/DX-DeveloperExperience/hygie-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("hygie-cli"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Simply run : "),a("code",[t._v("npm run generate:runnable RUNNABLENAME")]),t._v(".")]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[t._v("You need to have "),a("a",{attrs:{href:"https://github.com/nestjs/nest-cli",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("@nestjs/cli")]),a("OutboundLink")],1),t._v(" install globally. Therefore, run "),a("code",[t._v("npm install -g @nestjs/cli")]),t._v(".")])]),t._v(" "),a("p",[t._v("This CLI will create your runnable file and add everything necessary in the project. You just have to focus on your business logic.")]),t._v(" "),a("h3",{attrs:{id:"use-of-services"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-of-services","aria-hidden":"true"}},[t._v("#")]),t._v(" Use of services")]),t._v(" "),a("p",[t._v("It you need particular Services, you have to declare them in your constructor.")]),t._v(" "),a("p",[t._v("For example:")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("NestJs dependency injection will handle everything.")]),t._v(" "),a("h3",{attrs:{id:"handlebars-templating"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handlebars-templating","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("em",[t._v("handlebars")]),t._v(" templating")]),t._v(" "),a("p",[t._v("If you want to allow templating (you want to!), you need to use the "),a("code",[t._v("render()")]),t._v(" method provide by our "),a("em",[t._v("Utils")]),t._v(" class.")]),t._v(" "),a("p",[t._v("Just have a look at the "),a("code",[t._v("LoggerRunnable")]),t._v(" implementation:")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ruleResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RuleResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" LoggerArgs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'info'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ruleResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'warn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ruleResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The "),a("code",[t._v("render()")]),t._v(" method need the string containing the template (in the "),a("code",[t._v("args")]),t._v(" object), and the data provider: "),a("code",[t._v("RuleResult")]),t._v(" which is the return by the "),a("router-link",{attrs:{to:"/rules/customisableRules.html#validate-method"}},[a("code",[t._v("validate()")]),t._v(" rule method")]),t._v(".")],1)])},[],!1,null,null,null);e.default=n.exports}}]);