(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{247:function(t,e,r){"use strict";r.r(e);var o=r(1),a=Object(o.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"getting-started"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getting-started","aria-hidden":"true"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),r("h2",{attrs:{id:"directory-structure"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#directory-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" Directory structure")]),t._v(" "),r("p",[t._v("If you want to use the "),r("code",[t._v("Hygie")]),t._v(" API, you need to create a "),r("code",[t._v(".hygie")]),t._v(" folder in your root directory.")]),t._v(" "),r("p",[t._v("This folder will be fetched everytime you interact with our API.")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(".\n├── .hygie\n│  ├── .rulesrc\n│  └── cron-*.rulesrc\n└── package.json\n")])])]),r("p",[t._v("It contains the following files:")]),t._v(" "),r("ul",[r("li",[r("code",[t._v(".hygie/rulesrc")]),t._v(": all the rules and post-actions you configured (see the "),r("router-link",{attrs:{to:"/guide/configGenerator.html"}},[t._v("config generator")]),t._v("),")],1),t._v(" "),r("li",[r("code",[t._v(".hygie/cron-*.rulesrc")]),t._v(": all rules that will be evaluated in a cron job. Same as the "),r("code",[t._v("rulesrc")]),t._v(" file, check out our "),r("router-link",{attrs:{to:"/guide/configGenerator.html"}},[t._v("config generator")]),t._v(". "),r("code",[t._v("*")]),t._v(" is a wildcard; eg: "),r("code",[t._v("cron-vulnerabilities.rulesrc")]),t._v(" or "),r("code",[t._v("cron-1.rulesrc")]),t._v("."),r("div",{staticClass:"tip custom-block"},[r("p",[t._v("You can create as many Cron files as you want.")])])],1)]),t._v(" "),r("h2",{attrs:{id:"repository-registration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#repository-registration","aria-hidden":"true"}},[t._v("#")]),t._v(" Repository registration")]),t._v(" "),r("p",[t._v("You also need to "),r("router-link",{attrs:{to:"/guide/registerToken.html"}},[t._v("register your repository")]),t._v(" in our server.")],1),t._v(" "),r("div",{staticClass:"warning custom-block"},[r("p",[t._v("If you don't register your credentials, you will not be able to interact with your git repository (ie. create comment, update commit status, etc.).")])]),t._v(" "),r("h2",{attrs:{id:"running-the-project"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#running-the-project","aria-hidden":"true"}},[t._v("#")]),t._v(" Running the project")]),t._v(" "),r("p",[t._v("If you want to run this project, you have different choices :")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#turnkey-solutions"}},[t._v("turnkey solutions")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#from-our-public-api"}},[t._v("directly use our public API")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#run-our-docker-image-from-dockerhub"}},[t._v("running directly one of ours docker images")])])])]),t._v(" "),r("li",[r("a",{attrs:{href:"#clone-and-extend-it"}},[t._v("clone and extend it")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#from-our-github-repository"}},[t._v("launch it via CLI")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#build-your-own-docker-image"}},[t._v("create your own docker container")])])])])]),t._v(" "),r("h2",{attrs:{id:"turnkey-solutions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#turnkey-solutions","aria-hidden":"true"}},[t._v("#")]),t._v(" Turnkey solutions")]),t._v(" "),r("div",{staticClass:"warning custom-block"},[r("p",[t._v("With these turnkey solutions, you can't create your custom rules, to do that, check the next section.")])]),t._v(" "),r("h3",{attrs:{id:"from-our-public-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#from-our-public-api","aria-hidden":"true"}},[t._v("#")]),t._v(" From our public API")]),t._v(" "),r("p",[t._v("The easiest solution is to use directly our public API to getting started and discover our solution.")]),t._v(" "),r("p",[t._v("Our API is currently running at : "),r("a",{attrs:{href:"https://webhooks-sklnx3jldq-uc.a.run.app"}},[t._v("https://webhooks-sklnx3jldq-uc.a.run.app")]),t._v(".")]),t._v(" "),r("h3",{attrs:{id:"run-our-docker-image-from-dockerhub"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#run-our-docker-image-from-dockerhub","aria-hidden":"true"}},[t._v("#")]),t._v(" Run our Docker image from DockerHub")]),t._v(" "),r("p",[t._v("If you just want to test our project, without cloning it, you can run a container with one of the existing versions in "),r("a",{attrs:{href:"https://hub.docker.com/r/dxdeveloperexperience/hygie",target:"_blank",rel:"noopener noreferrer"}},[t._v("DockerHub"),r("OutboundLink")],1),t._v(".")]),t._v(" "),r("p",[t._v("You can simply run a container:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("docker run --name=webhook-container -v webhook-vol:/app -p 3000:3000 dxdeveloperexperience/hygie:0.23.0\n")])])]),r("h2",{attrs:{id:"clone-and-extend-it"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#clone-and-extend-it","aria-hidden":"true"}},[t._v("#")]),t._v(" Clone and extend it")]),t._v(" "),r("p",[t._v("Cloning this project allows you to extend it and create custom rules and runnables.")]),t._v(" "),r("div",{staticClass:"tip custom-block"},[r("p",[t._v("If you create rules or post-actions that can be usefull for others, please ask for a PR!")])]),t._v(" "),r("h3",{attrs:{id:"from-our-github-repository"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#from-our-github-repository","aria-hidden":"true"}},[t._v("#")]),t._v(" From our Github repository")]),t._v(" "),r("p",[t._v("First, clone our project and go to the root directory:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("git clone https://github.com/zenika-open-source/hygie\ncd hygie\n")])])]),r("p",[t._v("Then, simply run :")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("npm install\nnpm run start\n")])])]),r("p",[t._v("The application is now running at "),r("a",{attrs:{href:"localhost:3000"}},[t._v("localhost:3000")])]),t._v(" "),r("p",[t._v("To check if everything's alright, you should get a welcome message.")]),t._v(" "),r("h3",{attrs:{id:"build-your-own-docker-image"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#build-your-own-docker-image","aria-hidden":"true"}},[t._v("#")]),t._v(" Build your own Docker image")]),t._v(" "),r("p",[t._v("You can create a docker image of our "),r("strong",[r("em",[t._v("Hygie")])]),t._v(" API.")]),t._v(" "),r("p",[t._v("First, clone our project and go to the root directory :")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("git clone https://github.com/zenika-open-source/hygie\ncd hygie\n")])])]),r("p",[t._v("Then, build it:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("docker build -t my-webhook .\n")])])]),r("div",{staticClass:"tip custom-block"},[r("p",[t._v("This will execute the "),r("code",[t._v("Dockerfile")]),t._v(" config file.")])]),t._v(" "),r("p",[t._v("Finally, you can run the Docker image:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("docker run --name webhook-container -d -p 3000:3000 my-webhook\n")])])]),r("h2",{attrs:{id:"github-gitlab-webhook-configuration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#github-gitlab-webhook-configuration","aria-hidden":"true"}},[t._v("#")]),t._v(" Github/Gitlab webhook configuration")]),t._v(" "),r("p",[t._v("Once the API is running, you can add a webhook to your git repository with the url : "),r("code",[t._v("https://webhooks-sklnx3jldq-uc.a.run.app/webhook")]),t._v(". You can also select the events you want to receive, or select all of them.")]),t._v(" "),r("div",{staticClass:"tip custom-block"},[r("p",[t._v("You can use "),r("a",{attrs:{href:"https://ngrok.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ngrok"),r("OutboundLink")],1),t._v(" to convert localhost url to public url.")])]),t._v(" "),r("h3",{attrs:{id:"github"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#github","aria-hidden":"true"}},[t._v("#")]),t._v(" Github")]),t._v(" "),r("p",[t._v("You can add as many webhooks as you want. Just go to your repository settings: "),r("code",[t._v("https://github.com/:owner/:repo/settings/hooks")]),t._v(", add click the "),r("code",[t._v("Add webhook")]),t._v(" button.")]),t._v(" "),r("p",[t._v("Now you can :")]),t._v(" "),r("ul",[r("li",[t._v("configure the "),r("code",[t._v("Payload URL")]),t._v(",")]),t._v(" "),r("li",[t._v("check if "),r("code",[t._v("Content type")]),t._v(" is set to "),r("code",[t._v("application/json")]),t._v(",")]),t._v(" "),r("li",[t._v("select the "),r("code",[t._v("send me everything")]),t._v(" option,")]),t._v(" "),r("li",[t._v("save this configuration.")])]),t._v(" "),r("h3",{attrs:{id:"gitlab"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gitlab","aria-hidden":"true"}},[t._v("#")]),t._v(" Gitlab")]),t._v(" "),r("p",[t._v("Go to your repository integrations settings: "),r("code",[t._v("https://gitlab.com/:owner/:repo/settings/integrations")]),t._v(", configure the webhook URL and select all the events you want to intercept. Finally, save it via the "),r("code",[t._v("Add webhook")]),t._v(" button.")])])},[],!1,null,null,null);e.default=a.exports}}]);